"""
OCR receipt processing task (stub for Phase 0)
"""
from typing import Dict, Any
import structlog
from celery import Task
from services.worker.celery_app import app

logger = structlog.get_logger()


class OCRTask(Task):
    """Base task for OCR with retry logic"""
    autoretry_for = (Exception,)
    retry_kwargs = {"max_retries": 3}
    retry_backoff = True


@app.task(base=OCRTask, name="services.worker.tasks.ocr_receipt.process_receipt_task")
def process_receipt_task(
    receipt_id: str,
    entity: str,
    file_path: str,
    content_hash: str,
    source: str,
) -> Dict[str, Any]:
    """
    Process uploaded receipt with OCR (stub implementation)
    
    Phase 1 will implement:
    - Tesseract OCR
    - AWS Textract fallback
    - Vendor template parsing
    """
    logger.info("ocr_processing_started_stub",
                receipt_id=receipt_id,
                entity=entity,
                file_path=file_path,
                source=source)
    
    # TODO: Phase 1 - Implement actual OCR processing
    logger.info("ocr_stub_complete", receipt_id=receipt_id)
    
    return {
        "success": True,
        "receipt_id": receipt_id,
        "message": "Stub: OCR processing queued, Phase 1 will implement",
        "requires_review": True,
    }


@app.task(name="services.worker.tasks.ocr_receipt.reprocess_receipt")
def reprocess_receipt_task(receipt_id: str) -> Dict[str, Any]:
    """Reprocess a receipt (stub)"""
    logger.info("reprocessing_receipt_stub", receipt_id=receipt_id)
    return {
        "success": True,
        "receipt_id": receipt_id,
        "message": "Stub: Reprocessing not yet implemented",
    }
